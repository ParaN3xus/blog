name: blog::deploy

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN
permissions:
  deployments: write
  contents: read

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "deploy"
  cancel-in-progress: false

jobs:
  deploy-blog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Bun
        uses: oven-sh/setup-bun@v2

      - name: Sync Environment Variables
        run: cp content/.env.blog .env

      - name: Cache Fonts
        id: cache-fonts
        uses: actions/cache@v4
        with:
          path: ./assets/fonts
          key: fonts-noto-serif-2.003-sans-2.004

      - name: Download Fonts
        if: steps.cache-fonts.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./assets/fonts

          # Noto Serif CJK
          mkdir -p assets/fonts/noto-cjk
          wget -O noto-serif-cjk.zip "https://github.com/notofonts/noto-cjk/releases/download/Serif2.003/04_NotoSerifCJKOTC.zip"
          unzip -o noto-serif-cjk.zip -d assets/fonts/noto-cjk
          rm noto-serif-cjk.zip

          # Noto Sans CJK
          wget -O noto-sans-cjk.zip "https://github.com/notofonts/noto-cjk/releases/download/Sans2.004/03_NotoSansCJK-OTC.zip"
          unzip -o noto-sans-cjk.zip -d assets/fonts/noto-cjk
          rm noto-sans-cjk.zip

      - name: Cache Bun Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}

      - name: Install dependencies
        run: bun install

      - name: Build Blog
        run: bun run build

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dist --project-name=blog
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
